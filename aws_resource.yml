Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: MyVPC
  MyPublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: { "Ref" : "MyVPC" }
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyPublicSubnet1
  MyPublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone:
        Fn::Select:
         - 1
         - Fn::GetAZs: ""
      VpcId: { "Ref" : "MyVPC" }
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MyPublicSubnet2
  MyPrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: { "Ref" : "MyVPC" }
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: ""
      CidrBlock: 10.0.3.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MyPrivateSubnet1
  MyPrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: { "Ref" : "MyVPC" }
      AvailabilityZone:
        Fn::Select:
         - 1
         - Fn::GetAZs: ""
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: MyPrivateSubnet2
  MyInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway
  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: { "Ref" : "MyVPC" }
      InternetGatewayId: { "Ref" :  "MyInternetGateway" }
  MyPublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: { "Ref" : "MyVPC" }
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: { "Ref" :  "MyPublicRouteTable" }
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: { "Ref" :  "MyInternetGateway" }
  MyPublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: { "Ref" :  "MyPublicSubnet1" }
      RouteTableId: { "Ref" :  "MyPublicRouteTable" }
  MyPublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: { "Ref" :  "MyPublicSubnet2" }
      RouteTableId: { "Ref" :  "MyPublicRouteTable" }
  NatGateway:
    Type: "AWS::EC2::NatGateway"
    DependsOn: NatPublicIP
    Properties:
      AllocationId: { "Fn::GetAtt" : ["NatPublicIP", "AllocationId"] }
      SubnetId: { "Ref" :  "MyPublicSubnet1" }
  NatPublicIP:
    Type: "AWS::EC2::EIP"
    DependsOn: MyVPC
    Properties:
      Domain: vpc
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: { "Ref" : "MyVPC" }
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: { "Ref" :  "PrivateRouteTable" }
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: { "Ref" :  "NatGateway" }
  MyPrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: { "Ref" :  "MyPrivateSubnet1" }
      RouteTableId: { "Ref" :  "PrivateRouteTable" }
  MyPrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: { "Ref" :  "MyPrivateSubnet2" }
      RouteTableId: { "Ref" :  "PrivateRouteTable" }
  myDBSubnetGroup: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: description
      SubnetIds: 
        - { "Ref" :  "MyPrivateSubnet1" }
        - { "Ref" :  "MyPrivateSubnet2" }
        - { "Ref" :  "MyPublicSubnet1" }
        - { "Ref" :  "MyPublicSubnet2" }
      Tags: 
        - 
          Key: Name
          Value: "MySubnetGroup"

Outputs:
  MyVPCID:
    Description: VPC ID
    Value: { "Ref" : "MyVPC" }
    Export:
      Name: VPCID
  MyPrivateSubnet1ID:
    Description: Private Subnet A ID
    Value: { "Ref" :  "MyPrivateSubnet1" }
    Export:
      Name: PrivateSubnet1ID
  MyPrivateSubnet2ID:
    Description: Private Subnet B ID
    Value: { "Ref" :  "MyPrivateSubnet2" }
    Export:
      Name: PrivateSubnet2ID
  MyPublicSubnet1ID:
    Description: Public Subnet A ID
    Value: { "Ref" :  "MyPublicSubnet1" }
    Export:
      Name: PublicSubnet1ID
  MyPublicSubnet2ID:
    Description: Public Subnet B ID
    Value: { "Ref" :  "MyPublicSubnet2" }
    Export:
      Name: MyPublicSubnet2ID